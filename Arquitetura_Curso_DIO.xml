<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Arquitetura_Curso_DIO</name>
    </assembly>
    <members>
        <member name="M:Arquitetura_Curso_DIO.Controllers.AccountController.PostSignin(Arquitetura_Curso_DIO.Models.Requests.LoginRequest)">
            <summary>
            Endpoint para fazer login de um usuário
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Arquitetura_Curso_DIO.Controllers.CourseController.PostAsync(Arquitetura_Curso_DIO.Models.Requests.CreateCourseRequest)">
            <summary>
            Endpoint para criação de uma novo curso
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Arquitetura_Curso_DIO.Controllers.CourseController.GetAsync(System.Int32)">
            <summary>
            Endpoint para carregar um curso
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Arquitetura_Curso_DIO.Controllers.UserController.PostAsync(Arquitetura_Curso_DIO.Models.Requests.CreateUserRequest)">
            <summary>
            Endpoint para criação de uma novo usuário
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Arquitetura_Curso_DIO.Controllers.UserController.PostCourseAsync(System.Int32)">
            <summary>
            Endpoint para gerar uma matrícula do usuário logado em um curso
            </summary>
            <param name="courseId"></param>
            <returns></returns>
        </member>
        <member name="M:Arquitetura_Curso_DIO.Infrastructure.Repositories.Interfaces.ICourseRepository.AddAsync(Arquitetura_Curso_DIO.Business.Entities.Course)">
            <summary>
            Método que adiciona um curso ao contexto.
            </summary>
            <param name="course">Objeto curso que deve ser adicionado</param>
            <returns></returns>
        </member>
        <member name="M:Arquitetura_Curso_DIO.Infrastructure.Repositories.Interfaces.ICourseRepository.WhereAsync(System.Linq.Expressions.Expression{System.Func{Arquitetura_Curso_DIO.Business.Entities.Course,System.Boolean}})">
            <summary>
            Método que retorna uma lista de cursos conforme filtro informado
            </summary>
            <param name="predicate">Filtro para condicionar a pesquisa de cursos</param>
            <returns></returns>
        </member>
        <member name="M:Arquitetura_Curso_DIO.Infrastructure.Repositories.Interfaces.ICourseRepository.FindAsync(System.Int32)">
            <summary>
            Método que retorna um curso com base no ID informado. O objeto curso vem apenas com as informações básicas do curso, sem carregar nenhum objeto adicional.
            </summary>
            <param name="id">Id do curso desejado</param>
            <returns></returns>
        </member>
        <member name="M:Arquitetura_Curso_DIO.Infrastructure.Repositories.Interfaces.ICourseRepository.GetAsync(System.Linq.Expressions.Expression{System.Func{Arquitetura_Curso_DIO.Business.Entities.Course,System.Boolean}})">
            <summary>
            Método que retorna um curso conforme filtro informado. 
            Caso existam 2 ou mais cursos que respondam a requisição, será retornado o primeiro curso encontrado.
            O objeto curso vem carregado com todos objetos adicionais
            </summary>
            <param name="predicate">Filtro para condicionar a pesquisa do cursos</param>
            <returns></returns>
        </member>
        <member name="M:Arquitetura_Curso_DIO.Infrastructure.Repositories.Interfaces.ICourseRepository.SaveChangesAsync">
            <summary>
            Método que executa os savechanges do contexto, ao ser chamado, executa todas as alterações pendentes.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
